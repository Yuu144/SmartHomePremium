#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniversalServer.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="smarthome")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void Insertwetterwerte(wetterwerte instance);
    partial void Updatewetterwerte(wetterwerte instance);
    partial void Deletewetterwerte(wetterwerte instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::UniversalServer.Properties.Settings.Default.smarthomeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<wetterwerte> wetterwerte
		{
			get
			{
				return this.GetTable<wetterwerte>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.wetterwerte")]
	public partial class wetterwerte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _datetime;
		
		private double _temperatur;
		
		private double _humidity;
		
		private double _druck;
		
		private string _sender_ip;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndatetimeChanging(System.DateTime value);
    partial void OndatetimeChanged();
    partial void OntemperaturChanging(double value);
    partial void OntemperaturChanged();
    partial void OnhumidityChanging(double value);
    partial void OnhumidityChanged();
    partial void OndruckChanging(double value);
    partial void OndruckChanged();
    partial void Onsender_ipChanging(string value);
    partial void Onsender_ipChanged();
    #endregion
		
		public wetterwerte()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temperatur", DbType="Float NOT NULL")]
		public double temperatur
		{
			get
			{
				return this._temperatur;
			}
			set
			{
				if ((this._temperatur != value))
				{
					this.OntemperaturChanging(value);
					this.SendPropertyChanging();
					this._temperatur = value;
					this.SendPropertyChanged("temperatur");
					this.OntemperaturChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_humidity", DbType="Float NOT NULL")]
		public double humidity
		{
			get
			{
				return this._humidity;
			}
			set
			{
				if ((this._humidity != value))
				{
					this.OnhumidityChanging(value);
					this.SendPropertyChanging();
					this._humidity = value;
					this.SendPropertyChanged("humidity");
					this.OnhumidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_druck", DbType="Float NOT NULL")]
		public double druck
		{
			get
			{
				return this._druck;
			}
			set
			{
				if ((this._druck != value))
				{
					this.OndruckChanging(value);
					this.SendPropertyChanging();
					this._druck = value;
					this.SendPropertyChanged("druck");
					this.OndruckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_ip", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string sender_ip
		{
			get
			{
				return this._sender_ip;
			}
			set
			{
				if ((this._sender_ip != value))
				{
					this.Onsender_ipChanging(value);
					this.SendPropertyChanging();
					this._sender_ip = value;
					this.SendPropertyChanged("sender_ip");
					this.Onsender_ipChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
